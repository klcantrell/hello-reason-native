# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Build.SourceVersion)
jobs:
  - job: Linux
    timeoutInMinutes: 0
    pool:
      vmImage: 'Ubuntu 16.04'

    variables:
      ESY__CACHE_INSTALL_PATH: /home/vsts/.esy/3_____________________________________________________________________/i/
      ESY__CACHE_SOURCE_TARBALL_PATH: /home/vsts/.esy/source/i

    steps:
      # TODO: Uncomment both this and 'publish-build-cache' below to enable build caching for Linux.
      # - template: .ci/restore-build-cache.yml
      - template: .ci/esy-build-steps.yml
      # - template: .ci/publish-build-cache.yml
      - script: 'npm pack'
        displayName: 'npm pack'
      - script: 'cp ./src/_release/hello-reason-native-0.0.0.tgz $(Build.ArtifactStagingDirectory)'
        displayName: 'copy tgz to "Artifacts Staging Directory"'
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Linux executable'
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: linuxExe

  - job: MacOS
    timeoutInMinutes: 0
    pool:
      vmImage: 'macOS 10.13'

    variables:
      ESY__CACHE_INSTALL_PATH: /Users/vsts/.esy/3____________________________________________________________________/i/
      ESY__CACHE_SOURCE_TARBALL_PATH: /Users/vsts/.esy/source/i

    steps:
      # TODO: Uncomment both this and 'publish-build-cache' below to enable build caching for Mac.
      # - template: .ci/restore-build-cache.yml
      - template: .ci/esy-build-steps.yml
      # - template: .ci/publish-build-cache.yml
      - script: 'npm pack'
        displayName: 'npm pack'
      - script: 'cp ./src/_release/hello-reason-native-0.0.0.tgz $(Build.ArtifactStagingDirectory)'
        displayName: 'copy tgz to "Artifacts Staging Directory"'
      - task: PublishBuildArtifacts@1
        displayName: 'Publish MacOS executable'
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: macExe

  - job: Windows
    timeoutInMinutes: 0
    pool:
      vmImage: 'vs2017-win2016'

    variables:
      ESY__CACHE_INSTALL_PATH: C:\Users\VssAdministrator\.esy\3_\i
      ESY__CACHE_SOURCE_TARBALL_PATH: C:\Users\VssAdministrator\.esy\source\i

    steps:
      - template: .ci/restore-build-cache.yml
      - template: .ci/esy-build-steps.yml
      - template: .ci/publish-build-cache.yml
      - powershell: 'npm pack'
        displayName: 'npm pack'
      - powershell: 'cp ./src/_release/hello-reason-native-0.0.0.tgz $(Build.ArtifactStagingDirectory)'
        displayName: 'copy tgz to "Artifacts Staging Directory"'
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Windows executable'
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: windowsExe

  - job: Release
    timeoutInMinutes: 0
    displayName: Release
    dependsOn:
      - Linux
      - MacOS
      - Windows
    condition: succeeded()
    pool:
      vmImage: ubuntu-16.04
    steps:
      - task: DownloadBuildArtifacts@0
        displayName: 'Download Linux exectable'
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'linuxExe'
          downloadPath: '$(System.ArtifactsDirectory)'

      - task: DownloadBuildArtifacts@0
        displayName: 'Download Mac exectable'
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'macExe'
          downloadPath: '$(System.ArtifactsDirectory)'

      - task: DownloadBuildArtifacts@0
        displayName: 'Download Windows exectable'
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'windowsExe'
          downloadPath: '$(System.ArtifactsDirectory)'

      - task: GitHubRelease@0
        displayName: 'Release Package'
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/head/master'))
        inputs:
          gitHubConnection: 'klcantrell'
          repositoryName: 'klcantrell/hello-reason-native'
          title: 'Hello Reason Native Release'
          addChangeLog: false
          assets: |
            $(System.ArtifactsDirectory)\linuxExe\*
            $(System.ArtifactsDirectory)\macExe\*
            $(System.ArtifactsDirectory)\windowsExe\*.exe
